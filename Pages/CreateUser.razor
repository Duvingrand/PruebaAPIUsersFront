@page "/users/create"
@using PruebaFront.DTOs
@using PruebaFront.Services
@inject UserService UserService
@inject NavigationManager NavigationManager

<h3>Create User</h3>

<div class="row">
    <div class="col-md-6">
        <EditForm Model="@user" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="name" class="form-label">Name</label>
                <InputText id="name" @bind-Value="user.Name" class="form-control" />
                <ValidationMessage For="@(() => user.Name)" />
            </div>

            <div class="mb-3">
                <label for="lastName" class="form-label">Last Name</label>
                <InputText id="lastName" @bind-Value="user.LastName" class="form-control" />
                <ValidationMessage For="@(() => user.LastName)" />
            </div>

            <div class="mb-3">
                <label for="documentID" class="form-label">Document ID</label>
                <InputText id="documentID" @bind-Value="user.DocumentID" class="form-control" />
                <ValidationMessage For="@(() => user.DocumentID)" />
            </div>

            <div class="mb-3">
                <label for="tellNumber" class="form-label">Phone Number</label>
                <InputText id="tellNumber" @bind-Value="user.TellNumber" class="form-control" />
                <ValidationMessage For="@(() => user.TellNumber)" />
            </div>

            <div class="mb-3">
                <label for="address" class="form-label">Address</label>
                <InputText id="address" @bind-Value="user.Address" class="form-control" />
                <ValidationMessage For="@(() => user.Address)" />
            </div>

            <div class="mb-3">
                <label for="birthDay" class="form-label">Birth Date</label>
                <InputText id="birthDay" @bind-Value="user.BirthDay" class="form-control" type="date" />
                <ValidationMessage For="@(() => user.BirthDay)" />
            </div>

            <button type="submit" class="btn btn-primary">Create</button>
            <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
        </EditForm>
    </div>
</div>

@code {
    private UserDTO user = new UserDTO();

    private async Task HandleValidSubmit()
    {
        await UserService.CreateUser(user);
        NavigationManager.NavigateTo("/users");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/users");
    }
}
