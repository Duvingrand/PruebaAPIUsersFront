@page "/users/details/{Id:int}"
@using PruebaFront.DTOs
@using PruebaFront.Services
@inject UserService UserService
@inject NavigationManager NavigationManager

<h3>User Details</h3>

@if (user == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card">
        <div class="card-header">
            <h4>@user.FullName</h4>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-3 fw-bold">Document ID:</div>
                <div class="col-md-9">@user.DocumentID</div>
            </div>
            <div class="row mb-3">
                <div class="col-md-3 fw-bold">Phone Number:</div>
                <div class="col-md-9">@user.TellNumber</div>
            </div>
            <div class="row mb-3">
                <div class="col-md-3 fw-bold">Address:</div>
                <div class="col-md-9">@user.Address</div>
            </div>
            <div class="row mb-3">
                <div class="col-md-3 fw-bold">Birth Date:</div>
                <div class="col-md-9">@user.BirthDay</div>
            </div>
        </div>
        <div class="card-footer">
            <button class="btn btn-primary" @onclick="() => NavigateToEdit(user.Id)">Edit</button>
            <button class="btn btn-secondary" @onclick="BackToList">Back to List</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private UserResponseDTO user;

    protected override async Task OnInitializedAsync()
    {
        var users = await UserService.GetAllUsers();
        user = users.FirstOrDefault(u => u.Id == Id);
    }

    private void NavigateToEdit(int id)
    {
        NavigationManager.NavigateTo($"/users/edit/{id}");
    }

    private void BackToList()
    {
        NavigationManager.NavigateTo("/users");
    }
}
